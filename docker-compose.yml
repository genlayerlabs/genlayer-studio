version: '3'

services:

  frontend:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.frontend
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    volumes:
      - ./examples:/app/src/assets/examples
    depends_on:
      - jsonrpc
    expose:
      - "${FRONTEND_PORT}"

  jsonrpc:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.rpc
      target: debug
    environment:
      - FLASK_SERVER_PORT=${RPCPORT}
      # TODO: remove this in production
      - PYTHONUNBUFFERED=1
      - RPCDEBUGPORT=${RPCDEBUGPORT}
    ports:
      - "${RPCPORT}:${RPCPORT}"
      - "${RPCDEBUGPORT}:${RPCDEBUGPORT}"
    volumes:
      - ./.env:/app/.env
      - ./rpc:/app/rpc
      - ./database:/app/database
      - ./consensus:/app/consensus
      - ./common:/app/common
    depends_on:
      - ollama
      - postgres
      - genvm
    expose:
      - "${RPCPORT}"

  webrequest:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.webrequest
    shm_size: 2gb
    volumes:
      - ./webrequest:/app/webrequest
    environment:
      - FLASK_SERVER_PORT=${WEBREQUESTPORT}
      # TODO: remove this in production
      - PYTHONUNBUFFERED=1
    expose:
      - "${WEBREQUESTPORT}"
  
  genvm:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.genvm
      target: debug
    environment:
      - FLASK_SERVER_PORT=${GENVMPORT}
      - DEBUG=${GENVMDEBUG}
      - GENVMDEBUGPORT=${GENVMDEBUGPORT}
      - PYTHONUNBUFFERED=${GENVMDEBUG}
    expose:
      - "${GENVMPORT}"
    ports:
      - "${GENVMDEBUGPORT}:${GENVMDEBUGPORT}"
    volumes:
      - ./genvm:/app/genvm
      - ./common:/app/common

  ollama:
    image: ollama/ollama:latest
    ports:
      - 11434:11434
    volumes:
      - ./.ollama:/root/.ollama
    container_name: ollama
    pull_policy: always
    tty: true
    restart: always

  postgres:
    image: postgres:12.17
    restart: always
    # TODO: Remove in production
    ports:
      - "6000:5432"
    environment:
      - POSTGRES_USER=${DBUSER}
      - POSTGRES_PASSWORD=${DBPASSWORD}
      - POSTGRES_DB=${DBNAME}
    # If you want your db to persist in dev
    #volumes:
    #  - "./data/postgres:/var/lib/postgresql/data"