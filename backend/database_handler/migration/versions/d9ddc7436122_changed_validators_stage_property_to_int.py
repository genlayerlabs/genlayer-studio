"""changed validators stage property to int

Revision ID: d9ddc7436122
Revises: 02aa0c34a463
Create Date: 2024-08-06 14:26:15.737405

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "d9ddc7436122"
down_revision: Union[str, None] = "02aa0c34a463"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    connection = op.get_bind()

    column_name = "stake"
    id_column = "id"
    table_name = "validators"

    result = connection.execute(
        sa.text(f"SELECT {id_column}, {column_name} FROM {table_name}")
    )

    for [id, value] in result:
        int_value = int(value)
        new_value = int_value if int_value > 0 else 1
        print(f"Updating {table_name} {id} with `{new_value}`")
        # Update the row
        connection.execute(
            sa.text(
                f"UPDATE {table_name} SET {column_name} = :value WHERE {id_column} = :id"
            ),
            {"value": new_value, id_column: id},
        )

    op.alter_column(
        "validators",
        "stake",
        existing_type=sa.NUMERIC(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "validators",
        "stake",
        existing_type=sa.Integer(),
        type_=sa.NUMERIC(),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
