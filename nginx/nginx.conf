env SERVER_NAME;
events {
    worker_connections 1024;
}

http {
    # Lua package path configuration
    lua_package_path "/etc/nginx/lua/?.lua;;";

    # Frontend server
    server {
        listen 80;
        server_name ${SERVER_NAME};
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl;
        http2 on;
        server_name ${SERVER_NAME};

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/genlayer.com.crt;
        ssl_certificate_key /etc/nginx/ssl/genlayer.com.key;
        ssl_client_certificate /etc/nginx/ssl/cloudflare.crt;
        ssl_verify_client off;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

        # Security headers
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Forwarded-Proto $scheme always;
        add_header X-Original-URI $request_uri always;

        location / {
            proxy_pass http://frontend:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Backend (jsonrpc) server with WebSocket support
    server {
        listen 8443 ssl;
        http2 on;
        server_name ${SERVER_NAME};

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/genlayer.com.crt;
        ssl_certificate_key /etc/nginx/ssl/genlayer.com.key;
        ssl_client_certificate /etc/nginx/ssl/cloudflare.crt;
        ssl_verify_client off;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

        # Security headers
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Forwarded-Proto $scheme always;
        add_header X-Original-URI $request_uri always;

        # Socket.IO polling endpoint
        location /socket.io/ {
            proxy_pass http://jsonrpc:4000;

            # WebSocket specific settings
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Standard proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket timeouts
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;

            # Added headers for WebSocket
            proxy_set_header Sec-WebSocket-Protocol $http_sec_websocket_protocol;
            proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
            proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
            proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;

            # Buffer settings for WebSocket
            proxy_buffer_size 64k;
            proxy_buffers 8 32k;
            proxy_busy_buffers_size 64k;
        }

        # JSON-RPC endpoint
        location / {
            proxy_pass http://jsonrpc:4000;

            # Apply RPC method blocking only for POST requests
            if ($request_method = POST) {
                access_by_lua_file /etc/nginx/rpc-blocker.lua;
            }

            # Standard proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Ensure proper content type for JSON-RPC
            proxy_set_header Content-Type "application/json";

            # For handling large file uploads
            client_max_body_size 100M;
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
        }
    }
}