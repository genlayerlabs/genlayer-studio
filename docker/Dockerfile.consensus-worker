# Consensus worker Dockerfile - based on Ubuntu for compatibility
FROM ubuntu:24.04 AS base

ARG TARGETPLATFORM
ARG GENVM_TAG=v0.1.3
ARG path=/app
WORKDIR $path

SHELL ["/bin/bash", "-x", "-c"]
RUN apt-get update -y \
    && DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get install -y --no-install-recommends \
        curl unzip xz-utils ca-certificates python3.12 python3.12-dev libssl3 gcc \
    && mkdir -p "$HOME/.config/pip/" \
    && printf "[global]\nbreak-system-packages = true\n" >> "$HOME/.config/pip/pip.conf" \
    && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.12 2 \
    && curl -sS https://bootstrap.pypa.io/get-pip.py | python3.12 \
    && python3.12 -m pip --version \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
ADD backend/protocol_rpc/requirements.txt backend/protocol_rpc/requirements.txt
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --cache-dir=/root/.cache/pip -r backend/protocol_rpc/requirements.txt \
    && pip install --cache-dir=/root/.cache/pip uvicorn[standard] fastapi

# Create user and directories
RUN groupadd -r worker-group \
    && useradd -r -g worker-group worker-user \
    && mkdir -p /home/worker-user/.cache/huggingface \
    && chown -R worker-user:worker-group /home/worker-user \
    && chown -R worker-user:worker-group $path \
    && mkdir -p /genvm

ENV PYTHONPATH "${PYTHONPATH}:/${path}"
ENV HUGGINGFACE_HUB_CACHE /home/worker-user/.cache/huggingface
ENV RUST_BACKTRACE=1

# Download and setup GenVM
ADD \
    https://github.com/yeagerai/genvm/releases/download/$GENVM_TAG/genvm-linux-amd64.zip \
    /genvm/genvm-linux-amd64.zip

ADD \
    https://github.com/yeagerai/genvm/releases/download/$GENVM_TAG/genvm-linux-arm64.zip \
    /genvm/genvm-linux-arm64.zip

ADD \
    https://github.com/yeagerai/genvm/releases/download/$GENVM_TAG/genvm-runners.zip \
    /genvm/genvm-runners.zip

RUN cd /genvm \
    && if [[ "$TARGETPLATFORM" == "linux/amd64" ]] ; \
        then \
            unzip genvm-linux-amd64.zip ; \
        elif [[ "$TARGETPLATFORM" == "linux/arm64" ]] ; \
        then \
            unzip genvm-linux-arm64.zip ; \
        else \
            echo "Sorry, $TARGETPLATFORM is not supported yet" ; exit 1 ; \
        fi \
    && unzip genvm-runners.zip \
    && rm *.zip \
    && chown -R worker-user:worker-group /genvm \
    && su - worker-user -c 'python3 /genvm/scripts/runners-registry download --registry /genvm/share/lib/genvm/runners/all.json --dest /genvm/share/lib/genvm/runners/' \
    && su - worker-user -c '/genvm/bin/genvm precompile' \
    && cd "$path"

# Copy necessary files
COPY ../.env .
COPY backend $path/backend

# Change ownership of app files
RUN chown -R worker-user:worker-group $path

# Health check
HEALTHCHECK --interval=30s --timeout=10s --retries=3 --start-period=40s \
    CMD curl -f http://localhost:${WORKER_PORT:-4001}/health || exit 1

# Switch to non-root user
USER worker-user

# Run the consensus worker service
CMD ["python3", "-m", "uvicorn", "backend.consensus.worker_service:app", \
     "--host", "0.0.0.0", \
     "--port", "4001", \
     "--log-level", "info"]