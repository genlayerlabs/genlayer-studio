FROM ubuntu:24.04 AS base

ARG TARGETPLATFORM
ARG GENVM_TAG=v0.1.3

ARG path=/app
WORKDIR $path

SHELL ["/bin/bash", "-x", "-c"]
RUN apt-get update -y \
    && DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get install -y --no-install-recommends \
        curl unzip xz-utils ca-certificates python3.12 libssl3 git \
    && mkdir -p "$HOME/.config/pip/" \
    && printf "[global]\nbreak-system-packages = true\n" >> "$HOME/.config/pip/pip.conf" \
    && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.12 2 \
    && curl -sS https://bootstrap.pypa.io/get-pip.py | python3.12 \
    && python3.12 -m pip --version \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Capture git version using mount (temporary access, no git data in final image, the final image is stored on DockerHub)
RUN --mount=type=bind,source=.git,target=.git,readonly \
    git describe --tags --always 2>/dev/null | sed 's/^v//' | sed 's/-.*//' > /app/version.txt || echo "0.0.0" > /app/version.txt && \
    echo "${GENVM_TAG#v}" >> /app/version.txt

ADD backend/protocol_rpc/requirements.txt backend/protocol_rpc/requirements.txt
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --cache-dir=/root/.cache/pip -r backend/protocol_rpc/requirements.txt

RUN groupadd -r backend-group \
    && useradd -r -g backend-group backend-user \
    && mkdir -p /home/backend-user/.cache/huggingface \
    && chown -R backend-user:backend-group /home/backend-user \
    && chown -R backend-user:backend-group $path \
    && chown backend-user:backend-group /app/version.txt \
    && mkdir -p /genvm

ENV PYTHONPATH "${PYTHONPATH}:/${path}"
ENV FLASK_APP backend/protocol_rpc/server.py
ENV HUGGINGFACE_HUB_CACHE /home/backend-user/.cache/huggingface

ENV RUST_BACKTRACE=1

ADD \
    https://github.com/yeagerai/genvm/releases/download/$GENVM_TAG/genvm-linux-amd64.zip \
    /genvm/genvm-linux-amd64.zip

ADD \
    https://github.com/yeagerai/genvm/releases/download/$GENVM_TAG/genvm-linux-arm64.zip \
    /genvm/genvm-linux-arm64.zip

ADD \
    https://github.com/yeagerai/genvm/releases/download/$GENVM_TAG/genvm-runners.zip \
    /genvm/genvm-runners.zip

RUN cd /genvm \
    && if [[ "$TARGETPLATFORM" == "linux/amd64" ]] ; \
        then \
            unzip genvm-linux-amd64.zip ; \
        elif [[ "$TARGETPLATFORM" == "linux/arm64" ]] ; \
        then \
            unzip genvm-linux-arm64.zip ; \
        else \
            echo "Sorry, $TARGETPLATFORM is not supported yet" ; exit 1 ; \
        fi \
    && unzip genvm-runners.zip \
    && rm *.zip \
    && ls -R . \
    && chown -R backend-user:backend-group /genvm \
    && su - backend-user -c 'python3 /genvm/scripts/runners-registry download --registry /genvm/share/lib/genvm/runners/all.json --dest /genvm/share/lib/genvm/runners/' \
    && su - backend-user -c '/genvm/bin/genvm precompile' \
    && cd "$path" \
    && true

COPY ../.env .
COPY backend $path/backend

HEALTHCHECK --interval=1s --timeout=1s --retries=30 --start-period=3s CMD python3 backend/healthcheck.py --port ${FLASK_SERVER_PORT}

###########START NEW IMAGE : DEBUGGER ###################
FROM base AS debug
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --cache-dir=/root/.cache/pip debugpy watchdog
USER backend-user
CMD watchmedo auto-restart --no-restart-on-command-exit --recursive --pattern="*.py" --ignore-patterns="*.pyc;*__pycache__*" -- python3 -m debugpy --listen 0.0.0.0:${RPCDEBUGPORT} -m flask run -h 0.0.0.0 -p ${FLASK_SERVER_PORT}

###########START NEW IMAGE: PRODUCTION ###################
FROM base AS prod
USER backend-user
CMD flask run -h 0.0.0.0 -p ${FLASK_SERVER_PORT}
