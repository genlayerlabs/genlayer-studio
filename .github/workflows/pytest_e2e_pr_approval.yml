name: CI

on:
  push:
    branches:
      - 237-sim-optimize-docker-image-sizes-and-run-as-non-root-user

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Copy and remove OpenAI key from the .env file
        run: |
          cp .env.example .env
          sed -i "s/'jsonrpc'/'localhost'/g; s/'<add_your_api_key_here>'/'${{ secrets.OPENAIKEY }}'/g" .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker Images
        run: docker compose build

  test:
    runs-on: ubuntu-latest
    needs: build # Run tests after build
    env:
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Copy and Update .env file
        run: |
          cp .env.example .env
          sed -i "s/'jsonrpc'/'localhost'/g; s/'<add_your_api_key_here>'/'${{ secrets.OPENAIKEY }}'/g" .env

      - name: Start Docker Compose
        run: docker compose up -d

      - name: Wait for services to be up
        run: |
          timeout=60
          counter=0
          while [[ "$counter" -lt "$timeout" ]]; do
            if curl -X POST -H "Content-Type: application/json" -d '{"jsonrpc":"2.0","method":"ping","params":[],"id":1}' http://0.0.0.0:4000/api 2>&1 | grep -q "OK"; then
              echo "RPC server is up!"
              break
            else
              echo "Waiting for RPC server... ($counter/$timeout)"
              sleep 5
              counter=$((counter+1))
            fi
          done
          # Fail if the service didn't start within the timeout
          if [[ "$counter" -ge "$timeout" ]]; then
            echo "Error: Timeout while waiting for RPC server"
            exit 1
          fi

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12.4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements.test.txt

      - name: Run tests
        run: pytest tests/e2e/

      - name: Shutdown Docker Compose
        if: always()
        run: docker compose down
